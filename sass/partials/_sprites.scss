$sprites: sprite-map("sprite/*.png", $position: 0%, $spacing: 25px, $repeat: no-repeat, $readonly-spacing: 10px);
$sprites-stars: sprite-map("sprite-stars/*.png", $position: 0%, $spacing: 25px, $repeat: no-repeat, $readonly-spacing: 10px);
$sprites-stars_w: sprite-map("sprite-stars_w/*.png", $position: 0%, $spacing: 25px, $repeat: no-repeat, $readonly-spacing: 10px);
$sprites-stars_w2: sprite-map("sprite-stars_w2/*.png", $position: 0%, $spacing: 25px, $repeat: no-repeat, $readonly-spacing: 10px);

@mixin sprite-background($name,$map: $sprites, $spriteWidth:194px, $dimensions: true) {
  background-image: sprite-url($map);
  background-repeat: no-repeat;
  @if $dimensions == true{
    height: ceil(image-height(sprite-file($map, $name)) / 2) + 1;
    width: ceil(image-width(sprite-file($map, $name)) / 2);
    display: block;
  }
  $ypos: ceil(nth(sprite-position($map, $name), 2) / 2);
  background-position: 0 $ypos;
// Hard coded width of the normal sprite image. There must be a smarter way to do this.
  @include background-size($spriteWidth auto);
}

@function sprite-width($name, $smap: $sprites) {
  @return image-width(sprite-file($smap, $name));
}

@function sprite-height($name, $smap: $sprites) {
  @return image-height(sprite-file($smap, $name));
}